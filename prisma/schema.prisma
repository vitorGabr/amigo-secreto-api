generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  eventsCreated       Event[]            @relation("EventOwner")
  eventParticipations EventParticipant[]
  sentMatches         Match[]            @relation("Giver")
  receivedMatches     Match[]            @relation("Receiver")
  authLinks           AuthLink[]

  @@map("users")
}

model AuthLink {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  code      String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("auth_links")
}

model Event {
  id        Int      @id @default(autoincrement())
  name      String
  owner     User     @relation("EventOwner", fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  participants EventParticipant[]
  matches      Match[]

  @@map("events")
}

model EventParticipant {
  id        Int      @id @default(autoincrement())
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([eventId, userId])
  @@map("event_participants")
}

model Match {
  id         Int    @id @default(autoincrement())
  event      Event  @relation(fields: [eventId], references: [id])
  eventId    Int
  giver      User   @relation("Giver", fields: [giverId], references: [id])
  giverId    String
  receiver   User   @relation("Receiver", fields: [receiverId], references: [id])
  receiverId String

  @@unique([eventId, giverId, receiverId])
  @@map("matches")
}
